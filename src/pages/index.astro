---
import '@/styles/tailwind.css';

import projects from '@/data/projects';
import Hero from '@/partials/Hero';
import Image from '@/partials/Image.astro';
import ProjectList from '@/partials/ProjectList';
import RightRailMessage from '@/partials/RightRailMessage';
import Services from '@/partials/Services.astro';
import Statement from '@/partials/Statement.astro';
import Tools from '@/partials/Tools.astro';
import WaveButton from '@/partials/WaveButton';
import Base from '@/templates/Base.astro';
import Team from '@/partials/Team.astro';
import AppConfig from '@/utils/AppConfig';

const { description, title } = AppConfig;
---

<Base head={{ title, description }}>
  <Hero client:load>
    <h2
      class='staggered pb-10 text-xl leading-6 tracking-tighter opacity-0 md:w-[610px] md:text-3xl xl:w-[730px] xl:text-4xl'
    >
      A Brooklyn-based studio specializing in marketing websites for startups
      and small businesses.
    </h2>
    <WaveButton className='fadeUpIn'>Get In Touch</WaveButton>

    <RightRailMessage className="fadeUpIn">Booking projects for March 2024</RightRailMessage>
  </Hero>
  <ProjectList client:load>
    {projects.map(
      ({ alt, title: pTitle, src, description: pDescription, href }, index) => (
        <a
          href={href}
          title={pTitle}
          class={`${ index === 0 ? 'fadeUpIn' : 'fadeUpInOnScroll'} flex flex-col gap-2`}
        >
          <div class="h-85 overflow-hidden rounded-xl">
            <Image
              src={src}
              alt={alt}
              className="transition-transform duration-700 hover:scale-110"
            />
          </div>
          <div class="mb-12 mt-2 flex text-lg md:pb-20">
            <h3 class="w-1/3">{pTitle}</h3>
            <p class="w-1/2">{pDescription}</p>
          </div>
        </a>
      )
    )}
  </ProjectList>
  <Services />
  <Tools />
  <Statement />
  <Team />
</Base>

<script>
  import { customEase } from '@/utils/Animation';
  import gsap from 'gsap';
  import ScrollTrigger from 'gsap/dist/ScrollTrigger';

  const scrollVisibleEls = gsap.utils.toArray('.fadeUpInOnScroll');
  // const firstEl = scrollVisibleEls.shift();

  gsap.registerPlugin(ScrollTrigger);

  const getY = (index: number) => {
    return 25 * (index + 1);
  };

  const timeline = gsap.timeline();

  timeline.from('.fadeUpIn', {
    opacity: 0,
    y: getY,
    stagger: 0.1,
    duration: 1.5,
    ease: customEase,
    delay: 1.2,
  });

  // fixme: if viewport is tall enough to show first item
  // fade it in after hero animation, otherwise
  // fade in on scrolltrigger
  // timeline.to(firstEl, {
  //   opacity: 1,
  //   y: 0,
  //   ease: customEase,
  //   duration: 1,
  //   scrollTrigger: {
  //     trigger: firstEl,
  //   },
  // });

  scrollVisibleEls.forEach((el) => {
    console.log(el)
    gsap.to(el, {
      opacity: 1,
      y: 0,
      ease: customEase,
      duration: 1,
      scrollTrigger: {
        trigger: el,
      },
    });
  });
</script>
